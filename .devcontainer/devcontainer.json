// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.154.0/containers/alpine
{
	"name": "Alpine-GO",
	"build": {
		"dockerfile": "Dockerfile",
		// Update 'VARIANT' to pick an Alpine version: 3.10, 3.11, 3.12
		"args": {
			"VARIANT": "3.12"
		}
	},
	"workspaceMount": "source=${localWorkspaceFolder}/../../../../,target=/workspace,type=bind,consistency=delegated",
	"workspaceFolder": "/workspace/src/github.com/steffakasid/grd",
	"settings": {
    "terminal.integrated.shell.linux": "/bin/zsh",
    "go.useLanguageServer": true,
    "go.gopath": "/workspace",
    "go.goroot": "/usr/local/go"
	},
	"containerEnv": {
		"GOPATH": "/workspace",
		"GOROOT": "/usr/local/go"
	},
	"remoteEnv": {
		"PATH": "${containerEnv:PATH}:/usr/local/go/bin"
	},
	"extensions": [
		"golang.Go",
		"mhutchie.git-graph",
		"codezombiech.gitignore",
		"michelemelluso.gitignore",
		"eamodio.gitlens",
		"asciidoctor.asciidoctor-vscode",
		"editorconfig.editorconfig",
		"nepaul.editorconfiggenerator",
		"ms-ceintl.vscode-language-pack-de",
		"golang.go",
		"gruntfuggly.todo-tree",
		"visualstudioexptteam.vscodeintellicode",
		"piotrpalarz.vscode-gitignore-generator"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "uname -a",
	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}
